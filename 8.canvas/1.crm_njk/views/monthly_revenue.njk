<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
    table{
        width: 50%;
        border-collapse:collapse;
    }
    th,td{
        border: 1px solid #ddd
    }
    th{
        background-color: #f4f4f4;
    }
    tr:nth-child(even){
        background-color: #f9f9f9;
    }
    tr:hover{
        background-color: #f1f1f1;
    }
    

    </style>
</head>
<body>
    <h1>월간 매출액</h1>
    <table>
        <tr>
            <th>년-월</th>
            <th>해당 월 매출액</th>
        </tr>
        {% for row in rows %}
        <tr>
            <td>{{ row.YearMonth }}</td>
            <td>{{ row.MonthlyRevenue }}</td>
        </tr>
        {% endfor %}
    </table>

    <canvas id="chart1"></canvas>
    <canvas id="chart2"></canvas>
    <canvas id="chart3"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const labels=[];
        const revenues=[];
        const counts=[];

        {% for row in rows %}
            labels.push('{{row.YearMonth}}');
            revenues.push('{{row.MonthlyRevenue}}');
            counts.push('{{row.ItemCount}}');
        {% endfor %}


        // 1. 백엔드에서 rows라고 보냈으니.. 어떻게든 여기에서 추출한다.
        {# const labels = [
            {% for row in rows %}
                "{{ row.YearMonth }}"
            {% if not loop.last %}
                ,
            {% endif %}
            {% endfor %}
        ];

        const revenues = [
            {% for row in rows %}
                {{ row.MonthlyRevenue }}
            {% if not loop.last %}
                , 
            {% endif %}
            {% endfor %}
        ]; #}

        // 2. 내가 원하는걸 백엔드에서 보내준다.. <-- 이걸 더 추천함!!
        // 백엔드에서 넘겨주는 변수 받아오기 - 우리가 원하는 데이터는 어떤 형태인가?? 살펴보기...
        // | safe 는 내가 BE에서 보낸값을 신뢰하고 이스케이핑 처리하지 마라.. 내가 알아서 한다!
        
        // const labels = {{ labels | safe }};
        // const revenues = {{ revenues | safe }};

        {# console.log(labels);
        console.log(revenues); #}

        // 월간 매출액
        const ctx = document.getElementById('chart1').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                // labels: [x축의 데이터]
                labels: labels,
                datasets: [{
                    label: 'Monthly Revenue',
                    // data: [실제 데이터의 y축값]
                    data: revenues
                }]
            },
            options: {
            }
        });

        // 아이템 판매 개수
        const ctx2 = document.getElementById('chart2').getContext('2d');
        new Chart(ctx2, {
            type: "line",
            data:{
                labels: labels,
                datasets: [{
                    label: 'Item Count',
                    data: counts
                }]
            },
            options:{
            }
        
        });

        // 월간매출액 + 아이템 판매 개수
        const ctx3 = document.getElementById('chart3').getContext('2d');
        new Chart(ctx3, {
            data:{
                datasets:[{
                    type: "bar", 
                    label: "Monthly Revenue",
                    data: revenues,
                    yAxisID: "y",
                    order:1
                }, {
                    type: "line",
                    label: "Item Count",
                    data: counts,
                    yAxisID: "y1",
                    order:0
                }],
                labels: labels
            },
            options:{
                responsive: true,
                scales:{
                    y:{
                        type: "linear",
                        position: "left",
                        {# min: 6000000,
                        max: 12000000, #}
                    },

                    y1:{
                        type: "linear",
                        position: "right",
                        {# min: 2000,
                        max: 3000, #}
                    }
                
                }
            }
        });      
    </script>
</body>
</html>